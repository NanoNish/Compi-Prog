{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"BoilerPlate": {
		"prefix": "BoilerPlateCode",
		"body": [
			"#include<bits/stdc++.h>",
			"using namespace std;\n",
			"int main(){",
			"\t$1",
			"\treturn 0;",
			"}",
		],
		"description": "This is a BoilerPlate"
	},
	
	"CP_Template_Bas":{
		"prefix": "Basic_CPT",
		"body": [
			"#include <bits/stdc++.h>",
			"#define ll long long int",
			"#define loop(i,o,n,step) for(auto i{o}; i < n; i += step)",
			"using namespace std;\n",
			"int main(){",
			"\t$1",
			"}",
		],
		"description": "This is C++ CP template until I am a pro."
	},

	"CP_Template_Adv": {
		"prefix": "Advance_CPT",
		"body": [
			"#include<bits/stdc++.h>",
			"#define FAST ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);",
			"#define all(s) s.begin(),s.end()",
			"#define gcd            __gcd",
			"#define setbits(x)     __builtin_popcountll(x)",
			"#define binarystring(n,x) bitset<n> (x).to_string()",
			"#define zrobits(x)     __builtin_ctzll(x)",
			"#define mod            1000000007",
			"#define mod2           998244353",
			"#define maxe           *max_element",
			"#define mine           *min_element",
			"#define pb             push_back",
			"#define lb             lower_bound",
			"#define ub             upper_bound",
			"#define mk             make_pair",
			"#define deci(x, y)     fixed<<setprecision(y)<<x",
			"#define PI             3.141592653589793238",
			"#define mem0(x)        memset(x,0,sizeof x)",
			"#define mem1(x)        memset(x,-1,sizeof x)",
			"#define pr             pair<int,int>",
			"#define vi             vector<int>",
			"#define vll            vector<ll>",
			"#define vvi            vector<vi>",
			"#define vpr            vector<pr> ",
			"typedef long long ll;",
			"typedef unsigned long long ull;",
			"typedef long double lld;",
			"using namespace std;\n",
			"const int M = 1e9+7;",
			"#define nline '\\n'",
			"#ifndef ONLINE_JUDGE",
			"#define debug(x) cerr << #x <<' '; _print(x); cerr << endl;",
			"#else",
			"#define debug(x)",
			"#endif",
			"void _print(ll t) {cerr << t;}",
			"void _print(int t) {cerr << t;}",
			"void _print(string t) {cerr << t;}",
			"void _print(char t) {cerr << t;}",
			"void _print(lld t) {cerr << t;}",
			"void _print(double t) {cerr << t;}",
			"void _print(ull t) {cerr << t;}",
			"template <class T, class V> void _print(pair <T, V> p);",
			"template <class T> void _print(vector <T> v);",
			"template <class T> void _print(set <T> v);",
			"template <class T, class V> void _print(map <T, V> v);",
			"template <class T> void _print(multiset <T> v);",
			"ll BinExpItr(ll a , ll b){",
			"\tll res=1;",
			"\twhile(b){",
			"\t\tif(b&1){",
			"\t\t\tres=(res*a)%M;",
			"\t\t}",
			"\t\ta=(a*a)%M;",
			"\t\tb>>=1;",
			"\t}",
			"\treturn res;",
			"}",
			"void solve(){",
			"\t$1",
			"}",
			"int main(){",
			"\tFAST",
			"\tint t;",
			"\tcin>>t;",
			"\twhile(t--){",
			"\t\tsolve();",
			"\t}",
			"\treturn 0;",
			"}",
		],
		"description": "Template for CP when I become good at it."
	}	
}